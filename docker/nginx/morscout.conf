upstream morscout {
    zone upstream-morscout 64k;
    least_conn;
    {{range service "morscout|passing"}}server {{ .Address }}:{{ .Port }} max_fails=3 fail_timeout=60 weight=1;
    {{else}}server 127.0.0.1:65535; # force a 502{{end}}
}

server {
  server_name               scout.${address};
  listen                    443 ssl http2;
  listen                    [::]:443 ssl http2;

  # ssl_ciphers                 HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
  # ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
  # ssl_session_cache           builtin:1000  shared:SSL:10m;
  # ssl_certificate             /ssl/ssl.crt;
  # ssl_certificate_key         /ssl/ssl.key;
  # ssl_prefer_server_ciphers   on;

  location / {
    proxy_pass              http://morscout$request_uri;
    proxy_redirect          off;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_set_header        X-Forwarded-Proto-Version $http2;
    proxy_set_header        Host $http_host;
    proxy_set_header        X-NginX-Proxy true;
    proxy_set_header        Connection "";

    # Cache Controls
    # This section sets response expiration which prevents 304 not modified
    expires                 0;
    add_header              Pragma public;
    add_header              Cache-Control "public";
    access_log              off;

    # Security Patches
    # This section are security patches in case the client overrides
    # these values, the server re-enables it and enforce its rules
    add_header X-XSS-Protection         "1; mode=block";
    add_header X-Frame-Options          "deny";
    add_header X-Content-Type-Options   "nosniff";
  }
}
