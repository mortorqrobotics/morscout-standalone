// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Model is same throughout 1`] = `
Schema {
  "$id": 1,
  "_indexes": Array [],
  "_userProvidedOptions": Object {},
  "aliases": Object {},
  "callQueue": Array [],
  "childSchemas": Array [],
  "inherits": Object {},
  "methodOptions": Object {},
  "methods": Object {},
  "nested": Object {},
  "obj": Object {
    "buildEnd": Object {
      "type": [Function],
      "validate": [Function],
    },
    "buildStart": Object {
      "type": [Function],
      "validate": [Function],
    },
    "name": [Function],
    "seasonEnd": Object {
      "type": [Function],
      "validate": [Function],
    },
    "seasonStart": Object {
      "type": [Function],
      "validate": [Function],
    },
    "year": Object {
      "default": [Function],
      "type": [Function],
      "validate": [Function],
    },
  },
  "options": Object {
    "_id": true,
    "autoIndex": null,
    "bufferCommands": true,
    "capped": false,
    "discriminatorKey": "__t",
    "id": true,
    "minimize": true,
    "noId": false,
    "noVirtualId": false,
    "read": null,
    "shardKey": null,
    "strict": true,
    "typeKey": "type",
    "validateBeforeSave": true,
    "versionKey": "__v",
  },
  "paths": Object {
    "_id": ObjectId {
      "_index": null,
      "defaultValue": [Function],
      "getters": Array [],
      "instance": "ObjectID",
      "options": Object {
        "auto": true,
        "type": [Function],
      },
      "path": "_id",
      "setters": Array [
        [Function],
      ],
      "validators": Array [],
      Symbol(mongoose#schemaType): true,
    },
    "buildEnd": SchemaDate {
      "_index": null,
      "getters": Array [],
      "instance": "Date",
      "options": Object {
        "type": [Function],
        "validate": [Function],
      },
      "path": "buildEnd",
      "setters": Array [],
      "validators": Array [
        Object {
          "message": "Validator failed for path \`{PATH}\` with value \`{VALUE}\`",
          "type": "user defined",
          "validator": [Function],
        },
      ],
      Symbol(mongoose#schemaType): true,
    },
    "buildStart": SchemaDate {
      "_index": null,
      "getters": Array [],
      "instance": "Date",
      "options": Object {
        "type": [Function],
        "validate": [Function],
      },
      "path": "buildStart",
      "setters": Array [],
      "validators": Array [
        Object {
          "message": "Validator failed for path \`{PATH}\` with value \`{VALUE}\`",
          "type": "user defined",
          "validator": [Function],
        },
      ],
      Symbol(mongoose#schemaType): true,
    },
    "name": SchemaString {
      "_index": null,
      "enumValues": Array [],
      "getters": Array [],
      "instance": "String",
      "options": Object {
        "type": [Function],
      },
      "path": "name",
      "regExp": null,
      "setters": Array [],
      "validators": Array [],
      Symbol(mongoose#schemaType): true,
    },
    "seasonEnd": SchemaDate {
      "_index": null,
      "getters": Array [],
      "instance": "Date",
      "options": Object {
        "type": [Function],
        "validate": [Function],
      },
      "path": "seasonEnd",
      "setters": Array [],
      "validators": Array [
        Object {
          "message": "Validator failed for path \`{PATH}\` with value \`{VALUE}\`",
          "type": "user defined",
          "validator": [Function],
        },
      ],
      Symbol(mongoose#schemaType): true,
    },
    "seasonStart": SchemaDate {
      "_index": null,
      "getters": Array [],
      "instance": "Date",
      "options": Object {
        "type": [Function],
        "validate": [Function],
      },
      "path": "seasonStart",
      "setters": Array [],
      "validators": Array [
        Object {
          "message": "Validator failed for path \`{PATH}\` with value \`{VALUE}\`",
          "type": "user defined",
          "validator": [Function],
        },
      ],
      Symbol(mongoose#schemaType): true,
    },
    "year": SchemaNumber {
      "_index": null,
      "defaultValue": [Function],
      "getters": Array [],
      "instance": "Number",
      "options": Object {
        "default": [Function],
        "type": [Function],
        "validate": [Function],
      },
      "path": "year",
      "setters": Array [],
      "validators": Array [
        Object {
          "message": "Validator failed for path \`{PATH}\` with value \`{VALUE}\`",
          "type": "user defined",
          "validator": [Function],
        },
      ],
      Symbol(mongoose#schemaType): true,
    },
  },
  "plugins": Array [],
  "query": Object {},
  "s": Object {
    "hooks": Kareem {
      "_posts": Map {},
      "_pres": Map {},
    },
  },
  "singleNestedPaths": Object {},
  "statics": Object {},
  "subpaths": Object {},
  "tree": Object {
    "_id": Object {
      "auto": true,
      "type": [Function],
    },
    "buildEnd": Object {
      "type": [Function],
      "validate": [Function],
    },
    "buildStart": Object {
      "type": [Function],
      "validate": [Function],
    },
    "name": [Function],
    "seasonEnd": Object {
      "type": [Function],
      "validate": [Function],
    },
    "seasonStart": Object {
      "type": [Function],
      "validate": [Function],
    },
    "year": Object {
      "default": [Function],
      "type": [Function],
      "validate": [Function],
    },
  },
  "virtuals": Object {},
}
`;

exports[`Model is same throughout 2`] = `[Function]`;
